import React, { useState } from 'react';
import {useLanguage} from "../../../LanguageContext.jsx";

const MalwareChallenge = ({ completeChallenge }) => {
    const { language, translations } = useLanguage();
    const t = translations[language];

    const [selectedOptions, setSelectedOptions] = useState([]);
    const [showFeedback, setShowFeedback] = useState(false);
    const [currentStep, setCurrentStep] = useState(1);

    const steps = [
        {
            id: 1,
            question: language === 'kurdish'
                ? "کام لەم گزینهیانە ڕێگایەکی کاریگەرن بۆ پاراستنی کۆمپیوتەر لە ڤایرۆس؟ (هەمووی دیاری بکە)"
                : "Which of these options are effective ways to protect your computer from viruses? (Select all)",
            options: [
                {
                    id: 1,
                    text: language === 'kurdish'
                        ? "نەناردنی پەڕگەی گەورە لە ئیمەیڵ"
                        : "Not sending large files via email",
                    correct: false
                },
                {
                    id: 2,
                    text: language === 'kurdish'
                        ? "بەکارهێنانی ئەنتی ڤایرۆسێکی بەهێز"
                        : "Using a strong antivirus",
                    correct: true
                },
                {
                    id: 3,
                    text: language === 'kurdish'
                        ? "نەکردنی کلیک لەسەر لینکی نەناسراو"
                        : "Not clicking on unknown links",
                    correct: true
                },
                {
                    id: 4,
                    text: language === 'kurdish'
                        ? "نەهێشتنی پەڕگەکانی پشکنینکراو"
                        : "Not opening unchecked files",
                    correct: true
                },
                {
                    id: 5,
                    text: language === 'kurdish'
                        ? "کردنەوەی هەموو پەڕگەکانی پێگەیشتوو"
                        : "Opening all received files",
                    correct: false
                }
            ]
        },
        {
            id: 2,
            question: language === 'kurdish'
                ? "ئەگەر گومانت هەیە کۆمپیوتەرەکەت ڤایرۆسی تێدایە، کام لەم کارانە دەکەیت؟"
                : "If you suspect your computer has a virus, which of these would you do?",
            options: [
                {
                    id: 1,
                    text: language === 'kurdish'
                        ? "پەیوەندی بە پسپۆڕی تەکنیکی دەکەم"
                        : "Contact a technical specialist",
                    correct: true
                },
                {
                    id: 2,
                    text: language === 'kurdish'
                        ? "کۆمپیوتەرەکە دەبەستمەوە و دووبارە دەیکەمەوە"
                        : "Shut down and restart the computer",
                    correct: true
                },
                {
                    id: 3,
                    text: language === 'kurdish'
                        ? "ئینتەرنێت دەبەستمەوە"
                        : "Disconnect from the internet",
                    correct: true
                },
                {
                    id: 4,
                    text: language === 'kurdish'
                        ? "هیچ ناکەم و بەردەوام دەبم"
                        : "Do nothing and continue",
                    correct: false
                },
                {
                    id: 5,
                    text: language === 'kurdish'
                        ? "پەڕگە کەسییەکان دەگوازمە کۆمپیوتەرێکی تر"
                        : "Transfer personal files to another computer",
                    correct: false
                }
            ]
        }
    ];

    const toggleSelection = (id) => {
        if (selectedOptions.includes(id)) {
            setSelectedOptions(selectedOptions.filter(opt => opt !== id));
        } else {
            setSelectedOptions([...selectedOptions, id]);
        }
    };

    const checkAnswers = () => {
        const currentStepData = steps[currentStep - 1];
        const correctOptions = currentStepData.options.filter(opt => opt.correct).map(opt => opt.id);
        const userCorrect = selectedOptions.every(opt => correctOptions.includes(opt)) &&
            correctOptions.every(opt => selectedOptions.includes(opt));

        setShowFeedback(true);

        if (userCorrect) {
            if (currentStep < steps.length) {
                setTimeout(() => {
                    setCurrentStep(currentStep + 1);
                    setSelectedOptions([]);
                    setShowFeedback(false);
                }, 2000);
            } else {
                setTimeout(() => completeChallenge(40), 2000);
            }
        }
    };

    return (
        <div className="challenge-card">
            <h3>{language === 'kurdish' ? 'چالاکی ١: پاراستن لە ڤایرۆس' : 'Activity 1: Virus Protection'}</h3>
            <div className="step-indicator">
                {language === 'kurdish' ? `پێشگەیشتن ${currentStep} لە ${steps.length}` : `Step ${currentStep} of ${steps.length}`}
            </div>

            <div className="scenario-box">
                <h4>{language === 'kurdish' ? 'پرسیار:' : 'Question:'}</h4>
                <p>{steps[currentStep - 1].question}</p>
            </div>

            <div className="response-options">
                {steps[currentStep - 1].options.map(option => (
                    <div
                        key={option.id}
                        className={`response-card ${selectedOptions.includes(option.id) ? 'selected' : ''}`}
                        onClick={() => !showFeedback && toggleSelection(option.id)}
                    >
                        <input
                            type="checkbox"
                            checked={selectedOptions.includes(option.id)}
                            readOnly
                        />
                        <label>{option.text}</label>
                    </div>
                ))}
            </div>

            <button
                className="check-button"
                onClick={checkAnswers}
                disabled={selectedOptions.length === 0 || showFeedback}
            >
                {language === 'kurdish' ? 'پشکنین' : 'Check'}
            </button>

            {showFeedback && (
                <div className={`feedback ${
                    steps[currentStep - 1].options.filter(opt => opt.correct).map(opt => opt.id).every(opt => selectedOptions.includes(opt)) &&
                    selectedOptions.every(opt => steps[currentStep - 1].options.filter(o => o.correct).map(o => o.id).includes(opt)) ?
                        'correct' : 'incorrect'
                }`}>
                    {steps[currentStep - 1].options.filter(opt => opt.correct).map(opt => opt.id).every(opt => selectedOptions.includes(opt)) &&
                    selectedOptions.every(opt => steps[currentStep - 1].options.filter(o => o.correct).map(o => o.id).includes(opt)) ? (
                        <>
                            <i className="fas fa-check-circle"></i>
                            <p>
                                {language === 'kurdish'
                                    ? 'زۆر باش! تۆ ڕێگە دروستەکانی پاراستنی کۆمپیوتەرت زانی.'
                                    : 'Very good! You know the correct ways to protect your computer.'}
                            </p>
                        </>
                    ) : (
                        <>
                            <i className="fas fa-times-circle"></i>
                            <p>
                                {language === 'kurdish'
                                    ? 'هەندێک هەڵەت کردووە. لەبیرت بێت کە پاراستنی کۆمپیوتەر پێویستی بە وریایی و بەکارهێنانی ئامرازە پاڵپشتیکراوەکان هەیە.'
                                    : 'You made some mistakes. Remember that computer protection requires caution and using supported tools.'}
                            </p>
                        </>
                    )}
                </div>
            )}
        </div>
    );
};

export default MalwareChallenge;